{"title":"Metilación","markdown":{"yaml":{"execute":{"warning":false,"message":false},"bibliography":"references.bib"},"headingText":"Metilación","headingAttr":{"id":"","classes":["unnumbered"],"keyvalue":[]},"containsRefs":false,"markdown":"\n\n\nSe utiliza este codigo para analizar y visulizar los datos de ADN metilado\n\n```{r}\n#| echo: true\n#| eval: true\n\n#Loading\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(MASS)\nlibrary(readxl)\nlibrary(flextable)\nlibrary(moments)\nlibrary (GGally)\nlibrary(patchwork)\nlibrary(gridExtra)            # Cargar el paquete gridExtra\nlibrary(TCGAbiolinks)\nlibrary(IlluminaHumanMethylation450kanno.ilmn12.hg19)\nlibrary(IlluminaHumanMethylation450kmanifest)\nlibrary(minfi)\nlibrary(limma)\nlibrary(missMethyl)\nlibrary(DMRcate)\nlibrary(Gviz)\nlibrary(ggplot2)\nlibrary(RColorBrewer)\nlibrary(edgeR)\nlibrary(sesame)\nlibrary(UCSCXenaTools)\n```\n\n\n\n```{r}\n#| echo: true\n#| eval: true\n\n\n\ndata.met = readRDS(file = \"data.met.RDS\")\n# met matrix # SummarizedExperiment::assay(data.met): Esta parte del código accede \n# a la matriz de datos almacenada en el objeto data.met utilizando la función assay() \n# a los datos de metilación del ADN en un objeto SummarizedExperiment a un objeto de tipo data.frame\n# la salida es una dataframe de el codigo de cad muestra y identificador del sitio CpG específico que está en relación con la metilación del ADN\nmet <- as.data.frame(SummarizedExperiment::assay(data.met))\n# clinical data  se utiliza para extraer y convertir los metadatos clínicos asociados\n# describcion de cada pasient \nclinical1 <- data.frame(data.met@colData) #Esta parte del código accede a la información de los metadatos clínicos almacenados en el objeto data.met utilizando el atributo colData\n# get the 450k annotation data e utiliza para obtener la información de anotación para el array de metilación del ADN Illumina HumanMethylation450k en la versión del genoma hg19.\nann450k <- getAnnotation(IlluminaHumanMethylation450kanno.ilmn12.hg19)\n## remove probes with NA se utiliza para calcular el número de valores faltantes (NA) en cada fila del objeto\nprobe.na <- rowSums(is.na(met))\n\ntable(probe.na == 0)\n#FALSE   TRUE \n#103553 382024 \n# chose those has not NA values in rows\n# Para filtrar y seleccionar las filas del objeto met que no tienen valores faltantes, con el objetivo de trabajar solo con los datos completos para análisis posteriores.\nprobe <- probe.na[probe.na == 0]\n# para seleccionarlas filas que no tienen valores faltantes.\n## la salida es una dataframe de met aniterior pero sin valores faltante\nmet <- met[row.names(met) %in% names(probe), ]\n## remove probes that match to chromosome  X and Y \n# para eliminar las filas que corresponden a los cromosomas X e Y y mantiene solo las filas que contienen información de otros cromosomas.\nkeep <- !(row.names(met) %in% ann450k$Name[ann450k$chr %in% c(\"chrX\",\"chrY\")])\ntable(keep)\nmet <- met[keep, ]\nrm(keep) # remove no further needed probes.\n\n## remove SNPs overlapped probe # se utiliza para contar el número de valores NA (ausentes) y no NA en la columna Probe_rs del objeto ann450k.\ntable(is.na(ann450k$Probe_rs))\n# probes without snp\nno.snp.probe <- ann450k$Name[is.na(ann450k$Probe_rs)]\n#se seleccionan las sondas que tienen un identificador SNP asignado.\nsnp.probe <- ann450k[!is.na(ann450k$Probe_rs), ]\n#snps with maf <= 0.05\n#identifica las sondas en el objeto snp.probe que tienen \n#una frecuencia alélica mínima (MAF) menor o igual a 0.05 y almacena sus nombres en el vector snp5.probe. Estas sondas pueden ser de interés para estudios que se centren en variantes genéticas menos comunes.\nsnp5.probe <- snp.probe$Name[snp.probe$Probe_maf <= 0.05]\n\n# filtre met\n## filtra el objeto met para mantener solo las filas que corresponden a las sondas sin identificador SNP y las sondas con MAF menor o igual a 0.05\nmet <- met[row.names(met) %in% c(no.snp.probe, snp5.probe), ]\n#remove no-further needed dataset\nrm(no.snp.probe, probe, probe.na, snp.probe, snp5.probe)\n\n## Removing probes that have been demonstrated to map to multiple places in the genome.\n# list adapted from https://www.tandfonline.com/doi/full/10.4161/epi.23470\n\ncrs.reac <- read.csv(\"cross_reactive_probe.chen2013.csv\")\n#extrae la columna \"TargetID\" del objeto crs.reac, excluyendo la primera fila.\ncrs.reac <- crs.reac$TargetID[-1]\n\n# filtre met (-which ) para excluye las sondas que coinciden con secuencias de ADN cruzadas o no específicas.\nmet <- met[ -which(row.names(met) %in% crs.reac), ]\nbval1 <- met\n## converting beta values to m_values\n## m = log2(beta/1-beta)\nmval1 <- t(apply(met, 1, function(x) log2(x/(1-x))))\n\n#_________Differential methylation analysis_____________#\ntable(clinical1$paper_Histologic.grade, clinical1$paper_mRNA.cluster)\n# filtering and grouping\n#clinical <- clinical[, c(\"barcode\", \"paper_Histologic.grade\", \"paper_mRNA.cluster\")]\nclinical<-clinical1\nclinical<- clinical %>%\n  dplyr::select(barcode, paper_Histologic.grade, paper_mRNA.cluster)\n# remove rows with missing values\n#clinical <- na.omit(clinical)\nclinical <- drop_na(clinical)\n#clinical <- clinical[-which(clinical$paper_mRNA.cluster == \"ND\"), ]\nclinical <- clinical %>%\n  filter(paper_mRNA.cluster != \"ND\")\n#clinical <- clinical[-which(clinical$paper_Histologic.grade == \"ND\"), ]\nclinical<-clinical %>% \n  filter(paper_Histologic.grade != \"ND\")\n#clinical <- clinical[which(clinical$paper_mRNA.cluster == \"Luminal_papillary\"), ]\nclinical<-clinical %>% \n  filter(paper_mRNA.cluster == \"Luminal_papillary\")\nbarcode <- clinical$barcode\nbarcode<- clinical %>% \n  dplyr::select(barcode)\n########### # removing samples from meth matrixes\nbval<-bval1\nbval <- bval[, colnames(bval) %in% row.names(clinical)]\ndim(bval)\n\nmval<-mval1\nmval <- mval[, colnames(mval) %in% row.names(clinical)]\ndim(mval)\n# Making sure about samples in clinical and matrixes and their order\ntable(colnames(mval) %in% row.names(clinical))\ntable(colnames(bval) %in% row.names(clinical))\n#\nall(row.names(clinical) == colnames(bval))\nall(row.names(clinical) == colnames(mval))\n# Making grouping variable\n#clinical$paper_Histologic.grade <- as.factor(clinical$paper_Histologic.grade)\nclinical <- clinical %>%\n  mutate(paper_Histologic.grade = as.factor(paper_Histologic.grade))\n# levels(clinical$paper_Histologic.grade) # re-orders levels of a factor\n# clinical$paper_Histologic.grade <- relevel(clinical$paper_Histologic.grade, ref = \"Low Grade\")\nclinical <- clinical %>%\n  mutate(paper_Histologic.grade = relevel(paper_Histologic.grade, ref = \"Low Grade\"))\n#_____________ DMC analysis________________#\n# used to create a design matrix for a linear regression model\n# symbol indicates that you want to model the response variable (not specified here) \n# based on the predictor variable\ndesign <- model.matrix(~ paper_Histologic.grade, data = clinical)\n\n# fit the linear model  # MArrayLM: Microarray Linear Model Fit \n# Make sure the number of rows in mval matches the number of rows in design\n# Fit the linear model\nfit <- lmFit(mval, design)\n# fit the linear model \nfit <- lmFit(mval, design)\n# para mejorar la precisión de las estimaciones y controlar el error de tipo I.\nfit2 <- eBayes(fit)\n# extracting significantly methylated probes\n# aplicar los pasos de regularización empírica y ajuste de valores de p.\ndeff.meth = topTable(fit2, coef=ncol(design), sort.by=\"p\",number = nrow(mval), adjust.method = \"BY\")\n# Visualization\n# plot the top 10 most significantly differentially methylated CpGs \npar(mfrow=c(2,5))\nsapply(rownames(deff.meth)[1:10], function(cpg){\n  plotCpg(bval, cpg=cpg, pheno=clinical$paper_Histologic.grade, ylab = \"Beta values\")\n})\n# making a volcano plot\n#making dataset se utiliza accede a la columna correspondiente al valor de p en el objeto fit2,\n#calcula el logaritmo negativo en base 1fit2 p.value of paper_Histologic.gradeHigh Grade\ndat <- data.frame(foldchange = fit[[\"coefficients\"]][,2], \n                  logPvalue =  -log10(fit2[[\"p.value\"]][,2]))\n# ver si el valor absoluto de la columna foldchange en dat es menor que 0.4. Esto devuelve un vector de valores TRUE o FALSE\ndat$threshold <- as.factor(abs(dat$foldchange) < 0.4)\n#Visualization\ncols <- c(\"TRUE\" = \"grey\", \"FALSE\" = \"blue\")\nggplot(data=dat, aes(x=foldchange, y = logPvalue, color=threshold)) +\n  geom_point(alpha=.4, size=1.2) +\n  scale_colour_manual(values = cols) +\n  geom_vline(xintercept = 0.4, colour=\"#990000\", linetype=\"dashed\") + \n  geom_vline(xintercept = - 0.4, colour=\"#990000\", linetype=\"dashed\") +\n  theme(legend.position=\"none\") +\n  xlab(\"Methylation difference (delta beta)\") +\n  ylab(\"-log10 p value\") +\n  theme_bw() +\n  theme(legend.position = \"none\")\n# setting some annotation\n# para realizar una anotación de metilación de CpG en el objeto mval\nmyAnnotation <- cpg.annotate(object = mval, datatype = \"array\", \n                             what = \"M\", \n                             analysis.type = \"differential\", \n                             design = design, \n                             contrasts = FALSE, \n                             coef = \"paper_Histologic.gradeHigh Grade\", \n                             arraytype = \"450K\",\n                             fdr = 0.001)\n#el objeto myAnnotation contiene información anotada de metilación de CpG, incluyendo ubicaciones genómicas, estadísticas y metadatos adicionales relacionados con los CpG anotados.\nstr(myAnnotation)\n# DMR analysis #  realiza un análisis de diferencial de metilación (DMR), utilizando la función dmrcate\n# o identification and extraction of differentially methylated regions\nDMRs <- dmrcate(myAnnotation, lambda=1000, C=2)\n# sese utiliza para extraer las ubicaciones genómicas de los DMRs detectados en \n# forma de un objeto de la clase \"GRanges\" del paquete \"GenomicRanges\". Esto permite acceder y manipular fácilmente la información de los DMRs.\nresults.ranges <- extractRanges(DMRs)\n# Estos metadatos proporcionan información detallada sobre los DMRs detectados, como el número de CpGs involucrados, \n# las estadísticas de diferenciación y los genes asociados. Puedes utilizar esta información para realizar un análisis más exhaustivo de los DMRs y comprender mejor su relevancia biológica.\nresults.ranges\n# visualization\ndmr.table <- data.frame(results.ranges)\n# setting up variable for groupinh and color\n# Puedes utilizar estos códigos de color para asignar colores a diferentes elementos en tus visualizaciones\npal <- brewer.pal(8,\"Dark2\")\ngroups <- pal[1:length(unique(clinical$paper_Histologic.grade))]\nnames(groups) <- levels(factor(clinical$paper_Histologic.grade))\n#setting up the genomic region \ngen <- \"hg19\"\n# the index of the DMR that we will plot \ndmrIndex <- 2\n# coordinates are stored under results.ranges[dmrIndex]\nchrom <- as.character(seqnames(results.ranges[dmrIndex]))\nstart <- as.numeric(start(results.ranges[dmrIndex]))\nend <- as.numeric(end(results.ranges[dmrIndex]))\n# add 25% extra space to plot\nminbase <- start - (0.25*(end-start))\nmaxbase <- end + (0.25*(end-start))\n# defining CpG islands track\n# download cpgislands for chromosome number 6 from ucsc\nchr6.cpg <- read.csv(\"chr6-cpg.csv\")\n#  que contiene información sobre las secuencias genómicas, las coordenadas y la orientación de los datos \nislandData <- GRanges(seqnames=Rle(chr6.cpg[,1]), \n                      ranges=IRanges(start=chr6.cpg[,2],\n                                     end=chr6.cpg[,3]),\n                      strand=Rle(strand(rep(\"*\",nrow(chr6.cpg)))))\n# DNAseI hypersensitive sites track\n#downloaded from ucsc\nchr6.dnase <- read.csv(\"chr6-dnase.csv\")\n\ndnaseData <- GRanges(seqnames=chr6.dnase[,1],\n                     ranges=IRanges(start=chr6.dnase[,2], end=chr6.dnase[,3]),\n                     strand=Rle(rep(\"*\",nrow(chr6.dnase))),\n                     data=chr6.dnase[,5])\n#Setting up the ideogram, genome and RefSeq tracks \n# representación ideográfica de un cromosoma en un genoma específico\niTrack <- IdeogramTrack(genome = gen, chromosome = chrom, name=paste0(chrom))\ngTrack <- GenomeAxisTrack(col=\"black\", cex=1, name=\"\", fontcolor=\"black\")\n# representa una región génica utilizando datos de NCBI RefSeq.\nrTrack <- UcscTrack(genome=gen, chromosome=chrom, track=\"NCBI RefSeq\", \n                    from=minbase, to=maxbase, trackType=\"GeneRegionTrack\", \n                    rstarts=\"exonStarts\", rends=\"exonEnds\", gene=\"name\", \n                    symbol=\"name2\", transcript=\"name\", strand=\"strand\", \n                    fill=\"darkblue\",stacking=\"squish\", name=\"RefSeq\", \n                    showId=TRUE, geneSymbol=TRUE)\n# Ensure that the methylation data is ordered by chromosome and base position.\n# ordenar el dataframe ann450k por las columnas \"chr\" y \"pos\" en orden ascendente\nann450kOrd <- ann450k[order(ann450k$chr,ann450k$pos),]\n# realiza una correspondencia entre los valores de la columna \"Name\" del dataframe ann450kOrd y los nombres de fila del dataframe bval\nbvalOrd <- bval[match(ann450kOrd$Name,rownames(bval)),]\n################### Create the data tracks ###################\n# create genomic ranges object from methylation data\n# cpgData contiene información sobre los sitios CpG (CpG dinucleótidos) del genoma.\ncpgData <- GRanges(seqnames=Rle(ann450kOrd$chr),\n                   ranges=IRanges(start=ann450kOrd$pos, end=ann450kOrd$pos), #define los intervalos de los sitios CpG\n                   strand=Rle(rep(\"*\",nrow(ann450kOrd))),#indica la dirección del sitio CpG. En este caso, se utiliza el valor \"*\" para indicar que la dirección es desconocida.\n                   betas=bvalOrd) # los valores de beta asociados a cada sitio CpG\n# methylation data track # representa una pista de datos de metilación de ADN.\n# una pista de datos que muestra la metilación de ADN en diferentes grupos a lo \n#largo de un cromosoma. Los datos se representan utilizando valores de beta y se visualizan como líneas y puntos en la pista.\nmethTrack <- DataTrack(range=cpgData, \n                       groups=clinical$paper_Histologic.grade, # change this if your groups are diffrent\n                       genome = gen,\n                       chromosome=chrom,\n                       ylim=c(-0.05,1.05),\n                       col=pal,\n                       type=c(\"a\",\"p\"), \n                       name=\"DNA Meth.\\n(beta value)\",\n                       background.panel=\"white\", \n                       legend=TRUE, \n                       cex.title=0.8,\n                       cex.axis=0.8, \n                       cex.legend=0.8)\n# CpG island track  pista de anotaciones que muestra la ubicación y extensión de las islas CpG en el genoma. \nislandTrack <- AnnotationTrack(range=islandData, genome=gen, name=\"CpG Is.\", \n                               chromosome=chrom,fill=\"darkgreen\")\n# DNaseI hypersensitive site data track\n# una pista de datos que muestra la ubicación y la intensidad de los sitios de hipersensibilidad a la DNasa I en el geno\ndnaseTrack <- DataTrack(range=dnaseData, genome=gen, name=\"DNAseI\", \n                        type=\"gradient\", chromosome=chrom)\n# DMR position data track\ndmrTrack <- AnnotationTrack(start=start, end=end, genome=gen, name=\"DMR\", \n                            chromosome=chrom,fill=\"darkred\")\n# Set up the track list and indicate the relative sizes of the different tracks. \n# Finally, draw the plot using the plotTracks function\ntracks <- list(iTrack, gTrack, methTrack, dmrTrack, islandTrack, dnaseTrack,\n               rTrack)\nsizes <- c(2,2,5,2,2,2,3) # set up the relative sizes of the tracks\n\ntiff( filename = \"dmr.tiff\", width = 15, height = 10, units = \"in\", res = 400)\n\n```\n\n\n\n\n\n\n\n\n\n\n","srcMarkdownNoYaml":"\n\n## Metilación {.unnumbered}\n\nSe utiliza este codigo para analizar y visulizar los datos de ADN metilado\n\n```{r}\n#| echo: true\n#| eval: true\n\n#Loading\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(MASS)\nlibrary(readxl)\nlibrary(flextable)\nlibrary(moments)\nlibrary (GGally)\nlibrary(patchwork)\nlibrary(gridExtra)            # Cargar el paquete gridExtra\nlibrary(TCGAbiolinks)\nlibrary(IlluminaHumanMethylation450kanno.ilmn12.hg19)\nlibrary(IlluminaHumanMethylation450kmanifest)\nlibrary(minfi)\nlibrary(limma)\nlibrary(missMethyl)\nlibrary(DMRcate)\nlibrary(Gviz)\nlibrary(ggplot2)\nlibrary(RColorBrewer)\nlibrary(edgeR)\nlibrary(sesame)\nlibrary(UCSCXenaTools)\n```\n\n\n\n```{r}\n#| echo: true\n#| eval: true\n\n\n\ndata.met = readRDS(file = \"data.met.RDS\")\n# met matrix # SummarizedExperiment::assay(data.met): Esta parte del código accede \n# a la matriz de datos almacenada en el objeto data.met utilizando la función assay() \n# a los datos de metilación del ADN en un objeto SummarizedExperiment a un objeto de tipo data.frame\n# la salida es una dataframe de el codigo de cad muestra y identificador del sitio CpG específico que está en relación con la metilación del ADN\nmet <- as.data.frame(SummarizedExperiment::assay(data.met))\n# clinical data  se utiliza para extraer y convertir los metadatos clínicos asociados\n# describcion de cada pasient \nclinical1 <- data.frame(data.met@colData) #Esta parte del código accede a la información de los metadatos clínicos almacenados en el objeto data.met utilizando el atributo colData\n# get the 450k annotation data e utiliza para obtener la información de anotación para el array de metilación del ADN Illumina HumanMethylation450k en la versión del genoma hg19.\nann450k <- getAnnotation(IlluminaHumanMethylation450kanno.ilmn12.hg19)\n## remove probes with NA se utiliza para calcular el número de valores faltantes (NA) en cada fila del objeto\nprobe.na <- rowSums(is.na(met))\n\ntable(probe.na == 0)\n#FALSE   TRUE \n#103553 382024 \n# chose those has not NA values in rows\n# Para filtrar y seleccionar las filas del objeto met que no tienen valores faltantes, con el objetivo de trabajar solo con los datos completos para análisis posteriores.\nprobe <- probe.na[probe.na == 0]\n# para seleccionarlas filas que no tienen valores faltantes.\n## la salida es una dataframe de met aniterior pero sin valores faltante\nmet <- met[row.names(met) %in% names(probe), ]\n## remove probes that match to chromosome  X and Y \n# para eliminar las filas que corresponden a los cromosomas X e Y y mantiene solo las filas que contienen información de otros cromosomas.\nkeep <- !(row.names(met) %in% ann450k$Name[ann450k$chr %in% c(\"chrX\",\"chrY\")])\ntable(keep)\nmet <- met[keep, ]\nrm(keep) # remove no further needed probes.\n\n## remove SNPs overlapped probe # se utiliza para contar el número de valores NA (ausentes) y no NA en la columna Probe_rs del objeto ann450k.\ntable(is.na(ann450k$Probe_rs))\n# probes without snp\nno.snp.probe <- ann450k$Name[is.na(ann450k$Probe_rs)]\n#se seleccionan las sondas que tienen un identificador SNP asignado.\nsnp.probe <- ann450k[!is.na(ann450k$Probe_rs), ]\n#snps with maf <= 0.05\n#identifica las sondas en el objeto snp.probe que tienen \n#una frecuencia alélica mínima (MAF) menor o igual a 0.05 y almacena sus nombres en el vector snp5.probe. Estas sondas pueden ser de interés para estudios que se centren en variantes genéticas menos comunes.\nsnp5.probe <- snp.probe$Name[snp.probe$Probe_maf <= 0.05]\n\n# filtre met\n## filtra el objeto met para mantener solo las filas que corresponden a las sondas sin identificador SNP y las sondas con MAF menor o igual a 0.05\nmet <- met[row.names(met) %in% c(no.snp.probe, snp5.probe), ]\n#remove no-further needed dataset\nrm(no.snp.probe, probe, probe.na, snp.probe, snp5.probe)\n\n## Removing probes that have been demonstrated to map to multiple places in the genome.\n# list adapted from https://www.tandfonline.com/doi/full/10.4161/epi.23470\n\ncrs.reac <- read.csv(\"cross_reactive_probe.chen2013.csv\")\n#extrae la columna \"TargetID\" del objeto crs.reac, excluyendo la primera fila.\ncrs.reac <- crs.reac$TargetID[-1]\n\n# filtre met (-which ) para excluye las sondas que coinciden con secuencias de ADN cruzadas o no específicas.\nmet <- met[ -which(row.names(met) %in% crs.reac), ]\nbval1 <- met\n## converting beta values to m_values\n## m = log2(beta/1-beta)\nmval1 <- t(apply(met, 1, function(x) log2(x/(1-x))))\n\n#_________Differential methylation analysis_____________#\ntable(clinical1$paper_Histologic.grade, clinical1$paper_mRNA.cluster)\n# filtering and grouping\n#clinical <- clinical[, c(\"barcode\", \"paper_Histologic.grade\", \"paper_mRNA.cluster\")]\nclinical<-clinical1\nclinical<- clinical %>%\n  dplyr::select(barcode, paper_Histologic.grade, paper_mRNA.cluster)\n# remove rows with missing values\n#clinical <- na.omit(clinical)\nclinical <- drop_na(clinical)\n#clinical <- clinical[-which(clinical$paper_mRNA.cluster == \"ND\"), ]\nclinical <- clinical %>%\n  filter(paper_mRNA.cluster != \"ND\")\n#clinical <- clinical[-which(clinical$paper_Histologic.grade == \"ND\"), ]\nclinical<-clinical %>% \n  filter(paper_Histologic.grade != \"ND\")\n#clinical <- clinical[which(clinical$paper_mRNA.cluster == \"Luminal_papillary\"), ]\nclinical<-clinical %>% \n  filter(paper_mRNA.cluster == \"Luminal_papillary\")\nbarcode <- clinical$barcode\nbarcode<- clinical %>% \n  dplyr::select(barcode)\n########### # removing samples from meth matrixes\nbval<-bval1\nbval <- bval[, colnames(bval) %in% row.names(clinical)]\ndim(bval)\n\nmval<-mval1\nmval <- mval[, colnames(mval) %in% row.names(clinical)]\ndim(mval)\n# Making sure about samples in clinical and matrixes and their order\ntable(colnames(mval) %in% row.names(clinical))\ntable(colnames(bval) %in% row.names(clinical))\n#\nall(row.names(clinical) == colnames(bval))\nall(row.names(clinical) == colnames(mval))\n# Making grouping variable\n#clinical$paper_Histologic.grade <- as.factor(clinical$paper_Histologic.grade)\nclinical <- clinical %>%\n  mutate(paper_Histologic.grade = as.factor(paper_Histologic.grade))\n# levels(clinical$paper_Histologic.grade) # re-orders levels of a factor\n# clinical$paper_Histologic.grade <- relevel(clinical$paper_Histologic.grade, ref = \"Low Grade\")\nclinical <- clinical %>%\n  mutate(paper_Histologic.grade = relevel(paper_Histologic.grade, ref = \"Low Grade\"))\n#_____________ DMC analysis________________#\n# used to create a design matrix for a linear regression model\n# symbol indicates that you want to model the response variable (not specified here) \n# based on the predictor variable\ndesign <- model.matrix(~ paper_Histologic.grade, data = clinical)\n\n# fit the linear model  # MArrayLM: Microarray Linear Model Fit \n# Make sure the number of rows in mval matches the number of rows in design\n# Fit the linear model\nfit <- lmFit(mval, design)\n# fit the linear model \nfit <- lmFit(mval, design)\n# para mejorar la precisión de las estimaciones y controlar el error de tipo I.\nfit2 <- eBayes(fit)\n# extracting significantly methylated probes\n# aplicar los pasos de regularización empírica y ajuste de valores de p.\ndeff.meth = topTable(fit2, coef=ncol(design), sort.by=\"p\",number = nrow(mval), adjust.method = \"BY\")\n# Visualization\n# plot the top 10 most significantly differentially methylated CpGs \npar(mfrow=c(2,5))\nsapply(rownames(deff.meth)[1:10], function(cpg){\n  plotCpg(bval, cpg=cpg, pheno=clinical$paper_Histologic.grade, ylab = \"Beta values\")\n})\n# making a volcano plot\n#making dataset se utiliza accede a la columna correspondiente al valor de p en el objeto fit2,\n#calcula el logaritmo negativo en base 1fit2 p.value of paper_Histologic.gradeHigh Grade\ndat <- data.frame(foldchange = fit[[\"coefficients\"]][,2], \n                  logPvalue =  -log10(fit2[[\"p.value\"]][,2]))\n# ver si el valor absoluto de la columna foldchange en dat es menor que 0.4. Esto devuelve un vector de valores TRUE o FALSE\ndat$threshold <- as.factor(abs(dat$foldchange) < 0.4)\n#Visualization\ncols <- c(\"TRUE\" = \"grey\", \"FALSE\" = \"blue\")\nggplot(data=dat, aes(x=foldchange, y = logPvalue, color=threshold)) +\n  geom_point(alpha=.4, size=1.2) +\n  scale_colour_manual(values = cols) +\n  geom_vline(xintercept = 0.4, colour=\"#990000\", linetype=\"dashed\") + \n  geom_vline(xintercept = - 0.4, colour=\"#990000\", linetype=\"dashed\") +\n  theme(legend.position=\"none\") +\n  xlab(\"Methylation difference (delta beta)\") +\n  ylab(\"-log10 p value\") +\n  theme_bw() +\n  theme(legend.position = \"none\")\n# setting some annotation\n# para realizar una anotación de metilación de CpG en el objeto mval\nmyAnnotation <- cpg.annotate(object = mval, datatype = \"array\", \n                             what = \"M\", \n                             analysis.type = \"differential\", \n                             design = design, \n                             contrasts = FALSE, \n                             coef = \"paper_Histologic.gradeHigh Grade\", \n                             arraytype = \"450K\",\n                             fdr = 0.001)\n#el objeto myAnnotation contiene información anotada de metilación de CpG, incluyendo ubicaciones genómicas, estadísticas y metadatos adicionales relacionados con los CpG anotados.\nstr(myAnnotation)\n# DMR analysis #  realiza un análisis de diferencial de metilación (DMR), utilizando la función dmrcate\n# o identification and extraction of differentially methylated regions\nDMRs <- dmrcate(myAnnotation, lambda=1000, C=2)\n# sese utiliza para extraer las ubicaciones genómicas de los DMRs detectados en \n# forma de un objeto de la clase \"GRanges\" del paquete \"GenomicRanges\". Esto permite acceder y manipular fácilmente la información de los DMRs.\nresults.ranges <- extractRanges(DMRs)\n# Estos metadatos proporcionan información detallada sobre los DMRs detectados, como el número de CpGs involucrados, \n# las estadísticas de diferenciación y los genes asociados. Puedes utilizar esta información para realizar un análisis más exhaustivo de los DMRs y comprender mejor su relevancia biológica.\nresults.ranges\n# visualization\ndmr.table <- data.frame(results.ranges)\n# setting up variable for groupinh and color\n# Puedes utilizar estos códigos de color para asignar colores a diferentes elementos en tus visualizaciones\npal <- brewer.pal(8,\"Dark2\")\ngroups <- pal[1:length(unique(clinical$paper_Histologic.grade))]\nnames(groups) <- levels(factor(clinical$paper_Histologic.grade))\n#setting up the genomic region \ngen <- \"hg19\"\n# the index of the DMR that we will plot \ndmrIndex <- 2\n# coordinates are stored under results.ranges[dmrIndex]\nchrom <- as.character(seqnames(results.ranges[dmrIndex]))\nstart <- as.numeric(start(results.ranges[dmrIndex]))\nend <- as.numeric(end(results.ranges[dmrIndex]))\n# add 25% extra space to plot\nminbase <- start - (0.25*(end-start))\nmaxbase <- end + (0.25*(end-start))\n# defining CpG islands track\n# download cpgislands for chromosome number 6 from ucsc\nchr6.cpg <- read.csv(\"chr6-cpg.csv\")\n#  que contiene información sobre las secuencias genómicas, las coordenadas y la orientación de los datos \nislandData <- GRanges(seqnames=Rle(chr6.cpg[,1]), \n                      ranges=IRanges(start=chr6.cpg[,2],\n                                     end=chr6.cpg[,3]),\n                      strand=Rle(strand(rep(\"*\",nrow(chr6.cpg)))))\n# DNAseI hypersensitive sites track\n#downloaded from ucsc\nchr6.dnase <- read.csv(\"chr6-dnase.csv\")\n\ndnaseData <- GRanges(seqnames=chr6.dnase[,1],\n                     ranges=IRanges(start=chr6.dnase[,2], end=chr6.dnase[,3]),\n                     strand=Rle(rep(\"*\",nrow(chr6.dnase))),\n                     data=chr6.dnase[,5])\n#Setting up the ideogram, genome and RefSeq tracks \n# representación ideográfica de un cromosoma en un genoma específico\niTrack <- IdeogramTrack(genome = gen, chromosome = chrom, name=paste0(chrom))\ngTrack <- GenomeAxisTrack(col=\"black\", cex=1, name=\"\", fontcolor=\"black\")\n# representa una región génica utilizando datos de NCBI RefSeq.\nrTrack <- UcscTrack(genome=gen, chromosome=chrom, track=\"NCBI RefSeq\", \n                    from=minbase, to=maxbase, trackType=\"GeneRegionTrack\", \n                    rstarts=\"exonStarts\", rends=\"exonEnds\", gene=\"name\", \n                    symbol=\"name2\", transcript=\"name\", strand=\"strand\", \n                    fill=\"darkblue\",stacking=\"squish\", name=\"RefSeq\", \n                    showId=TRUE, geneSymbol=TRUE)\n# Ensure that the methylation data is ordered by chromosome and base position.\n# ordenar el dataframe ann450k por las columnas \"chr\" y \"pos\" en orden ascendente\nann450kOrd <- ann450k[order(ann450k$chr,ann450k$pos),]\n# realiza una correspondencia entre los valores de la columna \"Name\" del dataframe ann450kOrd y los nombres de fila del dataframe bval\nbvalOrd <- bval[match(ann450kOrd$Name,rownames(bval)),]\n################### Create the data tracks ###################\n# create genomic ranges object from methylation data\n# cpgData contiene información sobre los sitios CpG (CpG dinucleótidos) del genoma.\ncpgData <- GRanges(seqnames=Rle(ann450kOrd$chr),\n                   ranges=IRanges(start=ann450kOrd$pos, end=ann450kOrd$pos), #define los intervalos de los sitios CpG\n                   strand=Rle(rep(\"*\",nrow(ann450kOrd))),#indica la dirección del sitio CpG. En este caso, se utiliza el valor \"*\" para indicar que la dirección es desconocida.\n                   betas=bvalOrd) # los valores de beta asociados a cada sitio CpG\n# methylation data track # representa una pista de datos de metilación de ADN.\n# una pista de datos que muestra la metilación de ADN en diferentes grupos a lo \n#largo de un cromosoma. Los datos se representan utilizando valores de beta y se visualizan como líneas y puntos en la pista.\nmethTrack <- DataTrack(range=cpgData, \n                       groups=clinical$paper_Histologic.grade, # change this if your groups are diffrent\n                       genome = gen,\n                       chromosome=chrom,\n                       ylim=c(-0.05,1.05),\n                       col=pal,\n                       type=c(\"a\",\"p\"), \n                       name=\"DNA Meth.\\n(beta value)\",\n                       background.panel=\"white\", \n                       legend=TRUE, \n                       cex.title=0.8,\n                       cex.axis=0.8, \n                       cex.legend=0.8)\n# CpG island track  pista de anotaciones que muestra la ubicación y extensión de las islas CpG en el genoma. \nislandTrack <- AnnotationTrack(range=islandData, genome=gen, name=\"CpG Is.\", \n                               chromosome=chrom,fill=\"darkgreen\")\n# DNaseI hypersensitive site data track\n# una pista de datos que muestra la ubicación y la intensidad de los sitios de hipersensibilidad a la DNasa I en el geno\ndnaseTrack <- DataTrack(range=dnaseData, genome=gen, name=\"DNAseI\", \n                        type=\"gradient\", chromosome=chrom)\n# DMR position data track\ndmrTrack <- AnnotationTrack(start=start, end=end, genome=gen, name=\"DMR\", \n                            chromosome=chrom,fill=\"darkred\")\n# Set up the track list and indicate the relative sizes of the different tracks. \n# Finally, draw the plot using the plotTracks function\ntracks <- list(iTrack, gTrack, methTrack, dmrTrack, islandTrack, dnaseTrack,\n               rTrack)\nsizes <- c(2,2,5,2,2,2,3) # set up the relative sizes of the tracks\n\ntiff( filename = \"dmr.tiff\", width = 15, height = 10, units = \"in\", res = 400)\n\n```\n\n\n\n\n\n\n\n\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":true,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","highlight-style":"a11y-dark","output-file":"Met_ADN.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.361","theme":"cosmo","cover-image":"images/logo.jpg","bibliography":["references.bib"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}
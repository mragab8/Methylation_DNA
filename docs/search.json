[
  {
    "objectID": "index.html#bienvenido",
    "href": "index.html#bienvenido",
    "title": "Methylation_DNA",
    "section": "Bienvenido",
    "text": "Bienvenido\nEste es el sitio web del “Tutorial básico con SeqBreed”. Aquí encontrará algunos de los resultados obtenidos al realizar mi trabajo de grado del Máster de Mejora Genética Animal y Biotecnología de la Reproducción, específicamente, los resultados obtenidos al usar el módulo de Python SeqBreed.\nA lo largo de este tutorial usaré bloques informativos para resaltar algún aspecto importante. Abajo encontrará un ejemplo de los bloques y su significado.\n\nInformación sobre un tema de interés.\n\n\nInformación sobre una función usada en la codificación."
  },
  {
    "objectID": "index.html#licencia",
    "href": "index.html#licencia",
    "title": "Methylation_DNA",
    "section": "Licencia",
    "text": "Licencia\nEsta página web es de uso gratuito y está licenciado bajo la licencia licencia Creative Commons Attribution-NonCommercial-NoDerivs 4.0. Sí tiene alguna inquietud al respecto, por favor informar a los correos jollopezma@unal.edu.co y mperezenciso@gmail.com."
  },
  {
    "objectID": "Met_ADN.html",
    "href": "Met_ADN.html",
    "title": "Metilación",
    "section": "",
    "text": "Se utiliza este codigo para analizar y visulizar los datos de ADN metilado\n\n#Loading\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(MASS)\nlibrary(readxl)\nlibrary(flextable)\nlibrary(moments)\nlibrary (GGally)\nlibrary(patchwork)\nlibrary(gridExtra)            # Cargar el paquete gridExtra\nlibrary(TCGAbiolinks)\nlibrary(IlluminaHumanMethylation450kanno.ilmn12.hg19)\nlibrary(IlluminaHumanMethylation450kmanifest)\nlibrary(minfi)\nlibrary(limma)\nlibrary(missMethyl)\nlibrary(DMRcate)\nlibrary(Gviz)\nlibrary(ggplot2)\nlibrary(RColorBrewer)\nlibrary(edgeR)\nlibrary(sesame)\nlibrary(UCSCXenaTools)\n\n\ndata.met = readRDS(file = \"data.met.RDS\")\n# met matrix # SummarizedExperiment::assay(data.met): Esta parte del código accede \n# a la matriz de datos almacenada en el objeto data.met utilizando la función assay() \n# a los datos de metilación del ADN en un objeto SummarizedExperiment a un objeto de tipo data.frame\n# la salida es una dataframe de el codigo de cad muestra y identificador del sitio CpG específico que está en relación con la metilación del ADN\nmet &lt;- as.data.frame(SummarizedExperiment::assay(data.met))\n# clinical data  se utiliza para extraer y convertir los metadatos clínicos asociados\n# describcion de cada pasient \nclinical1 &lt;- data.frame(data.met@colData) #Esta parte del código accede a la información de los metadatos clínicos almacenados en el objeto data.met utilizando el atributo colData\n# get the 450k annotation data e utiliza para obtener la información de anotación para el array de metilación del ADN Illumina HumanMethylation450k en la versión del genoma hg19.\nann450k &lt;- getAnnotation(IlluminaHumanMethylation450kanno.ilmn12.hg19)\n## remove probes with NA se utiliza para calcular el número de valores faltantes (NA) en cada fila del objeto\nprobe.na &lt;- rowSums(is.na(met))\n\ntable(probe.na == 0)\n\n\n FALSE   TRUE \n156211 329366 \n\n#FALSE   TRUE \n#103553 382024 \n# chose those has not NA values in rows\n# Para filtrar y seleccionar las filas del objeto met que no tienen valores faltantes, con el objetivo de trabajar solo con los datos completos para análisis posteriores.\nprobe &lt;- probe.na[probe.na == 0]\n# para seleccionarlas filas que no tienen valores faltantes.\n## la salida es una dataframe de met aniterior pero sin valores faltante\nmet &lt;- met[row.names(met) %in% names(probe), ]\n## remove probes that match to chromosome  X and Y \n# para eliminar las filas que corresponden a los cromosomas X e Y y mantiene solo las filas que contienen información de otros cromosomas.\nkeep &lt;- !(row.names(met) %in% ann450k$Name[ann450k$chr %in% c(\"chrX\",\"chrY\")])\ntable(keep)\n\nkeep\n FALSE   TRUE \n  6284 323082 \n\nmet &lt;- met[keep, ]\nrm(keep) # remove no further needed probes.\n\n## remove SNPs overlapped probe # se utiliza para contar el número de valores NA (ausentes) y no NA en la columna Probe_rs del objeto ann450k.\ntable(is.na(ann450k$Probe_rs))\n\n\n FALSE   TRUE \n 87018 398494 \n\n# probes without snp\nno.snp.probe &lt;- ann450k$Name[is.na(ann450k$Probe_rs)]\n#se seleccionan las sondas que tienen un identificador SNP asignado.\nsnp.probe &lt;- ann450k[!is.na(ann450k$Probe_rs), ]\n#snps with maf &lt;= 0.05\n#identifica las sondas en el objeto snp.probe que tienen \n#una frecuencia alélica mínima (MAF) menor o igual a 0.05 y almacena sus nombres en el vector snp5.probe. Estas sondas pueden ser de interés para estudios que se centren en variantes genéticas menos comunes.\nsnp5.probe &lt;- snp.probe$Name[snp.probe$Probe_maf &lt;= 0.05]\n\n# filtre met\n## filtra el objeto met para mantener solo las filas que corresponden a las sondas sin identificador SNP y las sondas con MAF menor o igual a 0.05\nmet &lt;- met[row.names(met) %in% c(no.snp.probe, snp5.probe), ]\n#remove no-further needed dataset\nrm(no.snp.probe, probe, probe.na, snp.probe, snp5.probe)\n\n## Removing probes that have been demonstrated to map to multiple places in the genome.\n# list adapted from https://www.tandfonline.com/doi/full/10.4161/epi.23470\n\ncrs.reac &lt;- read.csv(\"cross_reactive_probe.chen2013.csv\")\n#extrae la columna \"TargetID\" del objeto crs.reac, excluyendo la primera fila.\ncrs.reac &lt;- crs.reac$TargetID[-1]\n\n# filtre met (-which ) para excluye las sondas que coinciden con secuencias de ADN cruzadas o no específicas.\nmet &lt;- met[ -which(row.names(met) %in% crs.reac), ]\nbval1 &lt;- met\n## converting beta values to m_values\n## m = log2(beta/1-beta)\nmval1 &lt;- t(apply(met, 1, function(x) log2(x/(1-x))))\n\n#_________Differential methylation analysis_____________#\ntable(clinical1$paper_Histologic.grade, clinical1$paper_mRNA.cluster)\n\n            \n             Basal_squamous Luminal Luminal_infiltrated Luminal_papillary  ND\n  High Grade            143      28                  79               120   4\n  Low Grade               1       0                   0                20   0\n  ND                      0       0                   1                 2   0\n            \n             Neuronal\n  High Grade       20\n  Low Grade         0\n  ND                0\n\n# filtering and grouping\n#clinical &lt;- clinical[, c(\"barcode\", \"paper_Histologic.grade\", \"paper_mRNA.cluster\")]\nclinical&lt;-clinical1\nclinical&lt;- clinical %&gt;%\n  dplyr::select(barcode, paper_Histologic.grade, paper_mRNA.cluster)\n# remove rows with missing values\n#clinical &lt;- na.omit(clinical)\nclinical &lt;- drop_na(clinical)\n#clinical &lt;- clinical[-which(clinical$paper_mRNA.cluster == \"ND\"), ]\nclinical &lt;- clinical %&gt;%\n  filter(paper_mRNA.cluster != \"ND\")\n#clinical &lt;- clinical[-which(clinical$paper_Histologic.grade == \"ND\"), ]\nclinical&lt;-clinical %&gt;% \n  filter(paper_Histologic.grade != \"ND\")\n#clinical &lt;- clinical[which(clinical$paper_mRNA.cluster == \"Luminal_papillary\"), ]\nclinical&lt;-clinical %&gt;% \n  filter(paper_mRNA.cluster == \"Luminal_papillary\")\nbarcode &lt;- clinical$barcode\nbarcode&lt;- clinical %&gt;% \n  dplyr::select(barcode)\n########### # removing samples from meth matrixes\nbval&lt;-bval1\nbval &lt;- bval[, colnames(bval) %in% row.names(clinical)]\ndim(bval)\n\n[1] 296027    140\n\nmval&lt;-mval1\nmval &lt;- mval[, colnames(mval) %in% row.names(clinical)]\ndim(mval)\n\n[1] 296027    140\n\n# Making sure about samples in clinical and matrixes and their order\ntable(colnames(mval) %in% row.names(clinical))\n\n\nTRUE \n 140 \n\ntable(colnames(bval) %in% row.names(clinical))\n\n\nTRUE \n 140 \n\n#\nall(row.names(clinical) == colnames(bval))\n\n[1] TRUE\n\nall(row.names(clinical) == colnames(mval))\n\n[1] TRUE\n\n# Making grouping variable\n#clinical$paper_Histologic.grade &lt;- as.factor(clinical$paper_Histologic.grade)\nclinical &lt;- clinical %&gt;%\n  mutate(paper_Histologic.grade = as.factor(paper_Histologic.grade))\n# levels(clinical$paper_Histologic.grade) # re-orders levels of a factor\n# clinical$paper_Histologic.grade &lt;- relevel(clinical$paper_Histologic.grade, ref = \"Low Grade\")\nclinical &lt;- clinical %&gt;%\n  mutate(paper_Histologic.grade = relevel(paper_Histologic.grade, ref = \"Low Grade\"))\n#_____________ DMC analysis________________#\n# used to create a design matrix for a linear regression model\n# symbol indicates that you want to model the response variable (not specified here) \n# based on the predictor variable\ndesign &lt;- model.matrix(~ paper_Histologic.grade, data = clinical)\n\n# fit the linear model  # MArrayLM: Microarray Linear Model Fit \n# Make sure the number of rows in mval matches the number of rows in design\n# Fit the linear model\nfit &lt;- lmFit(mval, design)\n# fit the linear model \nfit &lt;- lmFit(mval, design)\n# para mejorar la precisión de las estimaciones y controlar el error de tipo I.\nfit2 &lt;- eBayes(fit)\n# extracting significantly methylated probes\n# aplicar los pasos de regularización empírica y ajuste de valores de p.\ndeff.meth = topTable(fit2, coef=ncol(design), sort.by=\"p\",number = nrow(mval), adjust.method = \"BY\")\n# Visualization\n# plot the top 10 most significantly differentially methylated CpGs \npar(mfrow=c(2,5))\nsapply(rownames(deff.meth)[1:10], function(cpg){\n  plotCpg(bval, cpg=cpg, pheno=clinical$paper_Histologic.grade, ylab = \"Beta values\")\n})\n\n\n\n\n$cg04117396\nNULL\n\n$cg16177647\nNULL\n\n$cg23797032\nNULL\n\n$cg10113582\nNULL\n\n$cg19024575\nNULL\n\n$cg02893550\nNULL\n\n$cg01449677\nNULL\n\n$cg23834688\nNULL\n\n$cg07866001\nNULL\n\n$cg17939040\nNULL\n\n# making a volcano plot\n#making dataset se utiliza accede a la columna correspondiente al valor de p en el objeto fit2,\n#calcula el logaritmo negativo en base 1fit2 p.value of paper_Histologic.gradeHigh Grade\ndat &lt;- data.frame(foldchange = fit[[\"coefficients\"]][,2], \n                  logPvalue =  -log10(fit2[[\"p.value\"]][,2]))\n# ver si el valor absoluto de la columna foldchange en dat es menor que 0.4. Esto devuelve un vector de valores TRUE o FALSE\ndat$threshold &lt;- as.factor(abs(dat$foldchange) &lt; 0.4)\n#Visualization\ncols &lt;- c(\"TRUE\" = \"grey\", \"FALSE\" = \"blue\")\nggplot(data=dat, aes(x=foldchange, y = logPvalue, color=threshold)) +\n  geom_point(alpha=.4, size=1.2) +\n  scale_colour_manual(values = cols) +\n  geom_vline(xintercept = 0.4, colour=\"#990000\", linetype=\"dashed\") + \n  geom_vline(xintercept = - 0.4, colour=\"#990000\", linetype=\"dashed\") +\n  theme(legend.position=\"none\") +\n  xlab(\"Methylation difference (delta beta)\") +\n  ylab(\"-log10 p value\") +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n# setting some annotation\n# para realizar una anotación de metilación de CpG en el objeto mval\nmyAnnotation &lt;- cpg.annotate(object = mval, datatype = \"array\", \n                             what = \"M\", \n                             analysis.type = \"differential\", \n                             design = design, \n                             contrasts = FALSE, \n                             coef = \"paper_Histologic.gradeHigh Grade\", \n                             arraytype = \"450K\",\n                             fdr = 0.001)\n#el objeto myAnnotation contiene información anotada de metilación de CpG, incluyendo ubicaciones genómicas, estadísticas y metadatos adicionales relacionados con los CpG anotados.\nstr(myAnnotation)\n\nFormal class 'CpGannotated' [package \"DMRcate\"] with 1 slot\n  ..@ ranges:Formal class 'GRanges' [package \"GenomicRanges\"] with 7 slots\n  .. .. ..@ seqnames       :Formal class 'Rle' [package \"S4Vectors\"] with 4 slots\n  .. .. .. .. ..@ values         : Factor w/ 22 levels \"chr1\",\"chr2\",..: 1 2 3 4 5 6 7 8 9 10 ...\n  .. .. .. .. ..@ lengths        : int [1:22] 30814 20969 15373 11252 13886 21203 17971 12475 6148 14891 ...\n  .. .. .. .. ..@ elementMetadata: NULL\n  .. .. .. .. ..@ metadata       : list()\n  .. .. ..@ ranges         :Formal class 'IRanges' [package \"IRanges\"] with 6 slots\n  .. .. .. .. ..@ start          : int [1:296027] 812539 834183 834295 834356 837536 838486 839752 840274 840618 841289 ...\n  .. .. .. .. ..@ width          : int [1:296027] 1 1 1 1 1 1 1 1 1 1 ...\n  .. .. .. .. ..@ NAMES          : chr [1:296027] \"cg18147296\" \"cg13938959\" \"cg12445832\" \"cg23999112\" ...\n  .. .. .. .. ..@ elementType    : chr \"ANY\"\n  .. .. .. .. ..@ elementMetadata: NULL\n  .. .. .. .. ..@ metadata       : list()\n  .. .. ..@ strand         :Formal class 'Rle' [package \"S4Vectors\"] with 4 slots\n  .. .. .. .. ..@ values         : Factor w/ 3 levels \"+\",\"-\",\"*\": 3\n  .. .. .. .. ..@ lengths        : int 296027\n  .. .. .. .. ..@ elementMetadata: NULL\n  .. .. .. .. ..@ metadata       : list()\n  .. .. ..@ seqinfo        :Formal class 'Seqinfo' [package \"GenomeInfoDb\"] with 4 slots\n  .. .. .. .. ..@ seqnames   : chr [1:22] \"chr1\" \"chr2\" \"chr3\" \"chr4\" ...\n  .. .. .. .. ..@ seqlengths : int [1:22] NA NA NA NA NA NA NA NA NA NA ...\n  .. .. .. .. ..@ is_circular: logi [1:22] NA NA NA NA NA NA ...\n  .. .. .. .. ..@ genome     : chr [1:22] NA NA NA NA ...\n  .. .. ..@ elementMetadata:Formal class 'DFrame' [package \"S4Vectors\"] with 6 slots\n  .. .. .. .. ..@ rownames       : NULL\n  .. .. .. .. ..@ nrows          : int 296027\n  .. .. .. .. ..@ elementType    : chr \"ANY\"\n  .. .. .. .. ..@ elementMetadata: NULL\n  .. .. .. .. ..@ metadata       : list()\n  .. .. .. .. ..@ listData       :List of 4\n  .. .. .. .. .. ..$ stat   : num [1:296027] -1.03 -1.91 -3.14 -3.62 3.29 ...\n  .. .. .. .. .. ..$ diff   : num [1:296027] -0.035 -0.0835 -0.1329 -0.1832 0.1521 ...\n  .. .. .. .. .. ..$ ind.fdr: num [1:296027] 0.50219 0.17593 0.02214 0.00824 0.01649 ...\n  .. .. .. .. .. ..$ is.sig : logi [1:296027] FALSE FALSE FALSE FALSE FALSE FALSE ...\n  .. .. ..@ elementType    : chr \"ANY\"\n  .. .. ..@ metadata       : list()\n\n# DMR analysis #  realiza un análisis de diferencial de metilación (DMR), utilizando la función dmrcate\n# o identification and extraction of differentially methylated regions\nDMRs &lt;- dmrcate(myAnnotation, lambda=1000, C=2)\n# sese utiliza para extraer las ubicaciones genómicas de los DMRs detectados en \n# forma de un objeto de la clase \"GRanges\" del paquete \"GenomicRanges\". Esto permite acceder y manipular fácilmente la información de los DMRs.\nresults.ranges &lt;- extractRanges(DMRs)\n# Estos metadatos proporcionan información detallada sobre los DMRs detectados, como el número de CpGs involucrados, \n# las estadísticas de diferenciación y los genes asociados. Puedes utilizar esta información para realizar un análisis más exhaustivo de los DMRs y comprender mejor su relevancia biológica.\nresults.ranges\n\nGRanges object with 463 ranges and 8 metadata columns:\n        seqnames              ranges strand |   no.cpgs min_smoothed_fdr\n           &lt;Rle&gt;           &lt;IRanges&gt;  &lt;Rle&gt; | &lt;integer&gt;        &lt;numeric&gt;\n    [1]     chr6   33244775-33247250      * |        56      8.42986e-88\n    [2]    chr17   46651186-46653711      * |        12      2.96214e-57\n    [3]    chr11     1325718-1328622      * |        12      7.12492e-42\n    [4]    chr17   76794506-76795278      * |         5      4.00212e-59\n    [5]     chr6   33048254-33049494      * |        11      8.58374e-59\n    ...      ...                 ...    ... .       ...              ...\n  [459]     chr7 157402637-157402673      * |         2      4.25760e-14\n  [460]     chr7 128550623-128550812      * |         2      2.88595e-14\n  [461]    chr16       833110-833250      * |         2      8.86884e-15\n  [462]     chr6 100912072-100912168      * |         2      2.09966e-14\n  [463]    chr11     2322808-2323059      * |         4      2.23375e-14\n           Stouffer       HMFDR      Fisher    maxdiff   meandiff\n          &lt;numeric&gt;   &lt;numeric&gt;   &lt;numeric&gt;  &lt;numeric&gt;  &lt;numeric&gt;\n    [1] 7.89638e-34 2.55749e-03 1.70313e-37   0.278584  0.0947057\n    [2] 3.33226e-40 2.06223e-05 3.47858e-36   0.434035  0.3332666\n    [3] 5.48702e-33 5.19755e-06 1.71525e-30   0.427168  0.2552949\n    [4] 7.25473e-29 8.96197e-10 3.54734e-30   0.581938  0.3804778\n    [5] 1.33054e-26 8.37984e-07 1.56517e-28   0.406335  0.2358054\n    ...         ...         ...         ...        ...        ...\n  [459]  0.00173160   0.0111880  0.00288268 -0.1879305 -0.1575541\n  [460]  0.00648757   0.0369501  0.01142196  0.1638965  0.1460685\n  [461]  0.00767060   0.0357965  0.01289065  0.0729063  0.0527957\n  [462]  0.03359317   0.0856047  0.05152012  0.1247401  0.1110737\n  [463]  0.09790684   0.0918771  0.09052497 -0.0943266  0.0155559\n             overlapping.genes\n                   &lt;character&gt;\n    [1]         B3GALT4, WDR46\n    [2] HOXB-AS3, HOXB3, HOXB4\n    [3]                 TOLLIP\n    [4]                  USP36\n    [5]     HLA-DPB1, HLA-DPA1\n    ...                    ...\n  [459]                 PTPRN2\n  [460]                    KCP\n  [461]                  MSLNL\n  [462]                   SIM1\n  [463]               C11orf21\n  -------\n  seqinfo: 22 sequences from an unspecified genome; no seqlengths\n\n# visualization\ndmr.table &lt;- data.frame(results.ranges)\n# setting up variable for groupinh and color\n# Puedes utilizar estos códigos de color para asignar colores a diferentes elementos en tus visualizaciones\npal &lt;- brewer.pal(8,\"Dark2\")\ngroups &lt;- pal[1:length(unique(clinical$paper_Histologic.grade))]\nnames(groups) &lt;- levels(factor(clinical$paper_Histologic.grade))\n#setting up the genomic region \ngen &lt;- \"hg19\"\n# the index of the DMR that we will plot \ndmrIndex &lt;- 2\n# coordinates are stored under results.ranges[dmrIndex]\nchrom &lt;- as.character(seqnames(results.ranges[dmrIndex]))\nstart &lt;- as.numeric(start(results.ranges[dmrIndex]))\nend &lt;- as.numeric(end(results.ranges[dmrIndex]))\n# add 25% extra space to plot\nminbase &lt;- start - (0.25*(end-start))\nmaxbase &lt;- end + (0.25*(end-start))\n# defining CpG islands track\n# download cpgislands for chromosome number 6 from ucsc\nchr6.cpg &lt;- read.csv(\"chr6-cpg.csv\")\n#  que contiene información sobre las secuencias genómicas, las coordenadas y la orientación de los datos \nislandData &lt;- GRanges(seqnames=Rle(chr6.cpg[,1]), \n                      ranges=IRanges(start=chr6.cpg[,2],\n                                     end=chr6.cpg[,3]),\n                      strand=Rle(strand(rep(\"*\",nrow(chr6.cpg)))))\n# DNAseI hypersensitive sites track\n#downloaded from ucsc\nchr6.dnase &lt;- read.csv(\"chr6-dnase.csv\")\n\ndnaseData &lt;- GRanges(seqnames=chr6.dnase[,1],\n                     ranges=IRanges(start=chr6.dnase[,2], end=chr6.dnase[,3]),\n                     strand=Rle(rep(\"*\",nrow(chr6.dnase))),\n                     data=chr6.dnase[,5])\n#Setting up the ideogram, genome and RefSeq tracks \n# representación ideográfica de un cromosoma en un genoma específico\niTrack &lt;- IdeogramTrack(genome = gen, chromosome = chrom, name=paste0(chrom))\ngTrack &lt;- GenomeAxisTrack(col=\"black\", cex=1, name=\"\", fontcolor=\"black\")\n# representa una región génica utilizando datos de NCBI RefSeq.\nrTrack &lt;- UcscTrack(genome=gen, chromosome=chrom, track=\"NCBI RefSeq\", \n                    from=minbase, to=maxbase, trackType=\"GeneRegionTrack\", \n                    rstarts=\"exonStarts\", rends=\"exonEnds\", gene=\"name\", \n                    symbol=\"name2\", transcript=\"name\", strand=\"strand\", \n                    fill=\"darkblue\",stacking=\"squish\", name=\"RefSeq\", \n                    showId=TRUE, geneSymbol=TRUE)\n# Ensure that the methylation data is ordered by chromosome and base position.\n# ordenar el dataframe ann450k por las columnas \"chr\" y \"pos\" en orden ascendente\nann450kOrd &lt;- ann450k[order(ann450k$chr,ann450k$pos),]\n# realiza una correspondencia entre los valores de la columna \"Name\" del dataframe ann450kOrd y los nombres de fila del dataframe bval\nbvalOrd &lt;- bval[match(ann450kOrd$Name,rownames(bval)),]\n################### Create the data tracks ###################\n# create genomic ranges object from methylation data\n# cpgData contiene información sobre los sitios CpG (CpG dinucleótidos) del genoma.\ncpgData &lt;- GRanges(seqnames=Rle(ann450kOrd$chr),\n                   ranges=IRanges(start=ann450kOrd$pos, end=ann450kOrd$pos), #define los intervalos de los sitios CpG\n                   strand=Rle(rep(\"*\",nrow(ann450kOrd))),#indica la dirección del sitio CpG. En este caso, se utiliza el valor \"*\" para indicar que la dirección es desconocida.\n                   betas=bvalOrd) # los valores de beta asociados a cada sitio CpG\n# methylation data track # representa una pista de datos de metilación de ADN.\n# una pista de datos que muestra la metilación de ADN en diferentes grupos a lo \n#largo de un cromosoma. Los datos se representan utilizando valores de beta y se visualizan como líneas y puntos en la pista.\nmethTrack &lt;- DataTrack(range=cpgData, \n                       groups=clinical$paper_Histologic.grade, # change this if your groups are diffrent\n                       genome = gen,\n                       chromosome=chrom,\n                       ylim=c(-0.05,1.05),\n                       col=pal,\n                       type=c(\"a\",\"p\"), \n                       name=\"DNA Meth.\\n(beta value)\",\n                       background.panel=\"white\", \n                       legend=TRUE, \n                       cex.title=0.8,\n                       cex.axis=0.8, \n                       cex.legend=0.8)\n# CpG island track  pista de anotaciones que muestra la ubicación y extensión de las islas CpG en el genoma. \nislandTrack &lt;- AnnotationTrack(range=islandData, genome=gen, name=\"CpG Is.\", \n                               chromosome=chrom,fill=\"darkgreen\")\n# DNaseI hypersensitive site data track\n# una pista de datos que muestra la ubicación y la intensidad de los sitios de hipersensibilidad a la DNasa I en el geno\ndnaseTrack &lt;- DataTrack(range=dnaseData, genome=gen, name=\"DNAseI\", \n                        type=\"gradient\", chromosome=chrom)\n# DMR position data track\ndmrTrack &lt;- AnnotationTrack(start=start, end=end, genome=gen, name=\"DMR\", \n                            chromosome=chrom,fill=\"darkred\")\n# Set up the track list and indicate the relative sizes of the different tracks. \n# Finally, draw the plot using the plotTracks function\ntracks &lt;- list(iTrack, gTrack, methTrack, dmrTrack, islandTrack, dnaseTrack,\n               rTrack)\nsizes &lt;- c(2,2,5,2,2,2,3) # set up the relative sizes of the tracks\n\ntiff( filename = \"dmr.tiff\", width = 15, height = 10, units = \"in\", res = 400)"
  }
]